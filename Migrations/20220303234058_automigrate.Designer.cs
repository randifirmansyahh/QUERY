// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using QUERY.Data;

namespace QUERY.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20220303234058_automigrate")]
    partial class automigrate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 64)
                .HasAnnotation("ProductVersion", "5.0.13");

            modelBuilder.Entity("QUERY.Models.Blog", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("varchar(767)");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Image")
                        .HasColumnType("text");

                    b.Property<bool>("Status")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Username")
                        .HasColumnType("varchar(767)");

                    b.HasKey("Id");

                    b.HasIndex("Username");

                    b.ToTable("Tb_Blog");

                    b.HasData(
                        new
                        {
                            Id = "1",
                            Content = "kontennya",
                            CreateDate = new DateTime(2022, 3, 4, 6, 40, 58, 205, DateTimeKind.Local).AddTicks(7654),
                            Image = "https://avatars.githubusercontent.com/u/87772215?v=4",
                            Status = true,
                            Title = "judulnya"
                        });
                });

            modelBuilder.Entity("QUERY.Models.Roles", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("varchar(767)");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Tb_Roles");

                    b.HasData(
                        new
                        {
                            Id = "1",
                            Name = "Admin"
                        },
                        new
                        {
                            Id = "2",
                            Name = "User"
                        });
                });

            modelBuilder.Entity("QUERY.Models.User", b =>
                {
                    b.Property<string>("Username")
                        .HasColumnType("varchar(767)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("RolesId")
                        .HasColumnType("varchar(767)");

                    b.HasKey("Username");

                    b.HasIndex("RolesId");

                    b.ToTable("Tb_User");

                    b.HasData(
                        new
                        {
                            Username = "randi",
                            Email = "hehehe@gmail.com",
                            Name = "Randi Firmansyah",
                            Password = "randi"
                        });
                });

            modelBuilder.Entity("QUERY.Models.Blog", b =>
                {
                    b.HasOne("QUERY.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("Username");

                    b.Navigation("User");
                });

            modelBuilder.Entity("QUERY.Models.User", b =>
                {
                    b.HasOne("QUERY.Models.Roles", "Roles")
                        .WithMany()
                        .HasForeignKey("RolesId");

                    b.Navigation("Roles");
                });
#pragma warning restore 612, 618
        }
    }
}
